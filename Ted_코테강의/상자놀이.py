# 춘식이는 한 줄로 이어진 상자들을 가지고 놀이를 하려고 합니다.
# 놀이에는 정수 x, y, z 가 주어집니다.


# 춘식이는 왼쪽에서 x 번째 상자에서 놀이를 시작하고, 매 턴마다 오른쪽이나 왼쪽으로 한 칸씩 이동하여 y 번째 상자에 도착해야 합니다.
# 놀이를 진행하는 동안 최대 z 번의 이동이 가능하며, 모든 이동 방향은 동일할 수 있습니다.
# 춘식이가 놀이를 진행하며 도착할 수 있는 k 번째 상자 중, 가능한 k 의 최댓값을 구하세요. 

# 0. y까지는 가긴 가야한다.
# 1. x와 y의 거리(distance)가 최대 이동거리보다는 작아야 한다.
# 2. 오른쪽으로 최대한 가고 돌아오는 것이 최댓값이다.
# 3. 예외처리
# 3-1. if distance > z: return -1
# 3-2. x가 y에 도착한 후 최대한 오른쪽으로 갔다 돌아온 것보다 클 경우
#      res = max(x, 구한 최댓값)

def solution(x,y,z):
    res = -1

    d = abs(x-y)
    
    if(d > z):
        return res
    
    res = max(x,y+(z-d)//2)

    return res

print(solution(8,5,3))