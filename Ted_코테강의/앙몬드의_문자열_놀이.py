# 앙몬드는 가진 문자열 s를 이용하여 아래 규칙에 따라 새 문자열 b를 만들기로 합니다. 
# 문자열 b는 초기에 빈 문자열입니다. 
# 1부터 증가하는 i 에 대해 (1 ≤ i ≤ |s|, |s|는 문자열 s의 길이): 

# 문자열 b 끝에 문자 s[i-1]을 추가합니다.
# 문자열 b를 뒤집습니다. 

# 문자열 b를 만들기 전에, 문자열 b가 사전식 순서로 최댓값을 가질 수 있도록 앙몬드가 가진 문자열 s를 재배열하세요. 

# 1. 최댓값을 가진다? -> 입력 받은 문자열을 sort 시키면 된다.
# 2. 규칙에 따라 조립의 역순으로 문제를 바라본다.(붙이고 뒤집기 -> 뒤집고 떼기)
# 3. 위 규칙을 더 효율적으로 실행할 수 있는 방법을 생각해본다.(뒤집고 뗀다 -> 앞에서 1번 뒤에서 1번과 같이 진행하면 됨)

def solution(앙몬드):
    answer = []

    b = list(앙몬드)
    b.sort(reverse=True)

    for i in range(len(b)):
        if(i%2 == 0):
            answer.append(b.pop(0))
        else:
            answer.append(b.pop(-1))

    return answer.reverse()

print(solution('0011'))